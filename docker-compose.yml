version: "3"
services:
  auth-api:
    build:
      dockerfile: apps/auth-api/Dockerfile
      target: development
      context: .
    command: npm run start:auth-api
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - db
    expose:
     - 3332
    ports:
      - 3332:3332
      - 9010:9664
    environment:
      DATABASE_HOST: db
      DATABASE_SYNCHRONIZE: 'true'

  api-gateway:
    build:
      dockerfile: apps/api-gateway/Dockerfile
      target: development
      context: .
    command: npm run start:api-gateway
    volumes:
      - .:/app
      - /app/node_modules
    expose:
     - 3331
    ports:
      - 3331:3331
      - 9020:9663
    environment:
      DATABASE_HOST: db
      DATABASE_SYNCHRONIZE: 'true'


  order:
    build:
      dockerfile: apps/order/Dockerfile
      target: development
      context: .
    command: npm run start:order
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - db
    expose:
     - 3333
    ports:
      - 3333:3333
      - 9030:9665
    environment:
      DATABASE_HOST: db
      DATABASE_SYNCHRONIZE: 'true'

  wallet:
    build:
      dockerfile: apps/wallet/Dockerfile
      target: development
      context: .
    command: npm run start:wallet
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - db
    expose:
     - 3335
    ports:
      - 3335:3335
      - 9040:9667
    environment:
      DATABASE_HOST: db
      DATABASE_SYNCHRONIZE: 'true'
    
  rate:
    build:
      dockerfile: apps/rate/Dockerfile
      target: development
      context: .
    command: npm run start:rate
    volumes:
      - .:/app
      - /app/node_modules
    expose:
     - 3334
    ports:
      - 3334:3334
      - 9050:9666

  db:
    image: mongo:latest
    volumes:
      - './mongodb:/data/db'
    ports:
      - "27017:27017"
    restart: always

networks:
  default:
   name: dev_network
   driver: bridge
